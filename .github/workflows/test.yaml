name: test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack
        ports:
          - 4566:4566
        env:
          SERVICES: sqs
          SQS_PROVIDER: elasticmq
          DOCKER_HOST: unix:///var/run/docker.sock
        volumes:
          - ${{ github.workspace }}/bootstrap-localstack:/docker-entrypoint-initaws.d/
        options: >-
          --name=localstack
          --health-cmd="curl -sS 127.0.0.1:4566 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: spawn queue
        run: aws sqs create-queue --queue-name test-queue --region eu-west-1 --endpoint http://localhost:4566
        env:
          AWS_ACCESS_KEY_ID: itsafakeid
          AWS_SECRET_ACCESS_KEY: itsafakekey
          AWS_DEFAULT_REGION: "eu-west-1"
      - name: list queues
        run: aws sqs list-queues --endpoint http://localhost:4566
        env:
          AWS_ACCESS_KEY_ID: itsafakeid
          AWS_SECRET_ACCESS_KEY: itsafakekey
          AWS_DEFAULT_REGION: "eu-west-1"
      - name: post message to queue
        run: aws sqs send-message --queue-url "http://localhost:4566/000000000000/test-queue" --region eu-west-1 --endpoint-url http://localhost:4566 --message-body "test"
        env:
          AWS_ACCESS_KEY_ID: itsafakeid
          AWS_SECRET_ACCESS_KEY: itsafakekey
          AWS_DEFAULT_REGION: "eu-west-1"
      - name: read from spawned queue
        run: aws sqs receive-message --queue-url "http://localhost:4566/000000000000/test-queue" --region eu-west-1 --endpoint-url http://localhost:4566
        env:
          AWS_ACCESS_KEY_ID: itsafakeid
          AWS_SECRET_ACCESS_KEY: itsafakekey
          AWS_DEFAULT_REGION: "eu-west-1"
